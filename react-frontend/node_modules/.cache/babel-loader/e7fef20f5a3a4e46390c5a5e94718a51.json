{"ast":null,"code":"var _jsxFileName = \"/Users/carldiederichs/code/carldiederichs/javascript-projects/mern-udemy/places-mern-project/react-frontend/src/user/pages/Auth.js\";\nimport React, { useState, useContext } from \"react\";\nimport Card from \"../../shared/components/UIElements/Card\";\nimport Input from \"../../shared/components/FormElements/Input\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport { VALIDATOR_EMAIL, VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from \"../../shared/util/validators\";\nimport { useForm } from \"../../shared/hooks/form-hook\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\nimport './Auth.css';\nconst Auth = () => {\n  const auth = useContext(AuthContext);\n  const [isLoginMode, setIsLoginMode] = useState(true);\n  const {\n    isLoading,\n    error,\n    sendRequest,\n    clearError\n  } = useHttpClient();\n  const [formState, inputHandler, setFormData] = useForm({\n    email: {\n      value: '',\n      isValid: false\n    },\n    password: {\n      value: '',\n      isValid: false\n    }\n  }, false);\n  const switchModeHandler = () => {\n    if (!isLoginMode) {\n      setFormData({\n        ...formState.inputs,\n        name: undefined\n      }, formState.inputs.email.isValid && formState.inputs.password.isValid);\n    } else {\n      setFormData({\n        ...formState.inputs,\n        name: {\n          value: '',\n          isValid: false\n        }\n      }, false);\n    }\n    setIsLoginMode(prevMode => !prevMode);\n  };\n  const authSubmitHandler = async event => {\n    event.preventDefault();\n    if (isLoginMode) {\n      try {\n        await sendRequest('http://localhost:5000/api/users/login', 'POST', JSON.stringify({\n          email: formState.inputs.email.value,\n          password: formState.inputs.password.value\n        }), {\n          'Content-Type': 'application/json'\n        });\n        auth.login();\n      } catch (err) {}\n    } else {\n      try {\n        await sendRequest('http://localhost:5000/api/users/signup', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            name: formState.inputs.name.value,\n            email: formState.inputs.email.value,\n            password: formState.inputs.password.value\n          })\n        });\n        const responseData = await response.json();\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        }\n        setIsLoading(false);\n        auth.login();\n      } catch (err) {\n        console.log(err);\n        setIsLoading(false);\n        setError(err.message || 'Something went wrong, please try again.');\n      }\n    }\n  };\n  const errorHandler = () => {\n    setError(null);\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(ErrorModal, {\n    error: error,\n    onClear: errorHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Card, {\n    className: \"authentication\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 5\n    }\n  }, isLoading && /*#__PURE__*/React.createElement(LoadingSpinner, {\n    asOverlay: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }, \"Login Required\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: authSubmitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }, !isLoginMode && /*#__PURE__*/React.createElement(Input, {\n    element: \"input\",\n    id: \"name\",\n    type: \"text\",\n    label: \"Your Name\",\n    validators: [VALIDATOR_REQUIRE()],\n    text: \"Please enter a name.\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    element: \"input\",\n    id: \"email\",\n    type: \"email\",\n    label: \"Email\",\n    validators: [VALIDATOR_EMAIL()],\n    errorText: \"Please enter a valid address\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    element: \"input\",\n    id: \"password\",\n    type: \"password\",\n    label: \"Password\",\n    validators: [VALIDATOR_MINLENGTH(5)],\n    errorText: \"Please enter a valid password, at least 5 characters\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    disabled: !formState.isValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }, isLoginMode ? 'LOGIN' : 'SIGNUP')), /*#__PURE__*/React.createElement(Button, {\n    inverse: true,\n    onClick: switchModeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }\n  }, \"SWITCH TO SIGNUP \", isLoginMode ? 'LOGIN' : 'SIGNUP')));\n};\nexport default Auth;","map":{"version":3,"names":["React","useState","useContext","Card","Input","Button","ErrorModal","LoadingSpinner","VALIDATOR_EMAIL","VALIDATOR_MINLENGTH","VALIDATOR_REQUIRE","useForm","useHttpClient","AuthContext","Auth","auth","isLoginMode","setIsLoginMode","isLoading","error","sendRequest","clearError","formState","inputHandler","setFormData","email","value","isValid","password","switchModeHandler","inputs","name","undefined","prevMode","authSubmitHandler","event","preventDefault","JSON","stringify","login","err","method","headers","body","responseData","response","json","ok","Error","message","setIsLoading","console","log","setError","errorHandler","createElement","Fragment","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onClear","className","asOverlay","onSubmit","element","id","type","label","validators","text","onInput","errorText","disabled","inverse","onClick"],"sources":["/Users/carldiederichs/code/carldiederichs/javascript-projects/mern-udemy/places-mern-project/react-frontend/src/user/pages/Auth.js"],"sourcesContent":["import React, { useState, useContext } from \"react\";\n\nimport Card from \"../../shared/components/UIElements/Card\";\nimport Input from \"../../shared/components/FormElements/Input\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\"; \nimport { VALIDATOR_EMAIL, VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from \"../../shared/util/validators\";\nimport { useForm } from \"../../shared/hooks/form-hook\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\nimport './Auth.css'; \n\nconst Auth = () => {\n  const auth = useContext(AuthContext); \n  const [isLoginMode, setIsLoginMode] = useState(true);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  \n  const [formState, inputHandler, setFormData] = useForm({\n    email: {\n      value: '',\n      isValid: false\n    },\n    password: {\n      value: '',\n      isValid: false\n    }\n  }, false); \n\n  const switchModeHandler = () => {\n    if (!isLoginMode) {\n      setFormData(\n        {\n          ...formState.inputs,\n          name: undefined\n        }, formState.inputs.email.isValid && formState.inputs.password.isValid)\n    } else {\n      setFormData(\n          {\n            ...formState.inputs,\n            name: {\n              value: '', \n              isValid: false, \n          } \n        }, \n        false\n      );\n    }\n    setIsLoginMode(prevMode => !prevMode);\n  };\n\n  const authSubmitHandler = async event => {\n    event.preventDefault(); \n\n    if (isLoginMode) {\n      try {\n        await sendRequest(\n          'http://localhost:5000/api/users/login', \n          'POST', \n          JSON.stringify({\n            email: formState.inputs.email.value, \n            password: formState.inputs.password.value\n          }),\n          {\n            'Content-Type': 'application/json'\n          }\n        );\n        auth.login(); \n      } catch (err) {\n\n      }\n    } else {\n      try {\n        await sendRequest('http://localhost:5000/api/users/signup', {\n          method: 'POST', \n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            name: formState.inputs.name.value, \n            email: formState.inputs.email.value, \n            password: formState.inputs.password.value\n          })\n        });\n        \n        const responseData = await response.json();\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        }\n        setIsLoading(false); \n        auth.login(); \n      } catch (err) {\n        console.log(err);\n        setIsLoading(false); \n        setError(err.message || 'Something went wrong, please try again.');\n      }\n    }\n  };\n\n  const errorHandler = () => {\n    setError(null);\n  };\n\n  return (\n  <React.Fragment>\n    <ErrorModal error={error} onClear={errorHandler}/>\n    <Card className='authentication'>\n      {isLoading && <LoadingSpinner asOverlay/>}\n      <h2>Login Required</h2>\n      <hr />\n      <form onSubmit={authSubmitHandler}>\n        {!isLoginMode && (\n          <Input \n            element='input' \n            id='name' \n            type='text' \n            label='Your Name' \n            validators={[VALIDATOR_REQUIRE()]} \n            text='Please enter a name.'\n            onInput={inputHandler}\n          />\n        )}\n        <Input \n          element='input' \n          id='email' \n          type='email' \n          label='Email' \n          validators={[VALIDATOR_EMAIL()]}\n          errorText='Please enter a valid address'\n          onInput={inputHandler}\n        />\n        <Input \n          element='input' \n          id='password' \n          type='password' \n          label='Password' \n          validators={[VALIDATOR_MINLENGTH(5)]}\n          errorText='Please enter a valid password, at least 5 characters'\n          onInput={inputHandler}\n        />\n        <Button type='submit' disabled={!formState.isValid}>\n          {isLoginMode ? 'LOGIN' : 'SIGNUP'}\n        </Button>\n      </form>\n      <Button inverse onClick={switchModeHandler}>\n        SWITCH TO SIGNUP {isLoginMode ? 'LOGIN' : 'SIGNUP'}</Button>\n    </Card>\n  </React.Fragment>\n  );\n}; \n\nexport default Auth;"],"mappings":"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"},"metadata":{},"sourceType":"module"}