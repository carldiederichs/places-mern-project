{"ast":null,"code":"var _jsxFileName = \"/Users/carldiederichs/code/carldiederichs/javascript-projects/mern-udemy/places-mern-project/react-frontend/src/user/pages/Users.js\";\nimport React, { useEffect, useState } from 'react';\nimport UsersList from '../components/UsersList';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nconst Users = () => {\n  const {\n    isLoading,\n    error,\n    send\n  } = useHttpClient();\n  const [loadedUsers, setLoadedUsers] = useState();\n  useEffect(() => {\n    const sendRequest = async () => {\n      setIsLoading(true);\n      try {\n        const response = await fetch('http://localhost:5000/api/users');\n        const responseData = await response.json();\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        }\n        setLoadedUsers(responseData.users);\n        setIsLoading(false);\n      } catch (err) {\n        setError(err.message);\n      }\n      setIsLoading(false);\n    };\n    sendRequest();\n  }, []);\n  const errorHandler = () => {\n    setError(null);\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ErrorModal, {\n    error: error,\n    onClear: errorHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }), isLoading && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(LoadingSpinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  })), !isLoading && loadedUsers && /*#__PURE__*/React.createElement(UsersList, {\n    items: loadedUsers,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 43\n    }\n  }));\n};\nexport default Users;","map":{"version":3,"names":["React","useEffect","useState","UsersList","ErrorModal","LoadingSpinner","useHttpClient","Users","isLoading","error","send","loadedUsers","setLoadedUsers","sendRequest","setIsLoading","response","fetch","responseData","json","ok","Error","message","users","err","setError","errorHandler","createElement","Fragment","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onClear","className","items"],"sources":["/Users/carldiederichs/code/carldiederichs/javascript-projects/mern-udemy/places-mern-project/react-frontend/src/user/pages/Users.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'; \n\nimport UsersList from '../components/UsersList'\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\n\nconst Users = () => {\n    const {isLoading, error, send} = useHttpClient();\n    const [loadedUsers, setLoadedUsers] = useState();\n    useEffect(()=> {\n        const sendRequest = async () => {\n            setIsLoading(true);\n            try {\n                const response = await fetch('http://localhost:5000/api/users');\n    \n                const responseData = await response.json();\n\n                if (!response.ok) {\n                    throw new Error(responseData.message); \n                }\n    \n                setLoadedUsers(responseData.users);\n                setIsLoading(false);\n            } catch (err) {\n                setError(err.message); \n            }\n            setIsLoading(false);\n        };\n        sendRequest();\n    }, []);\n\n    const errorHandler = () => {\n        setError(null);\n    }; \n    \n    return (\n        <React.Fragment>\n            <ErrorModal error={error} onClear={errorHandler} />\n            {isLoading && (\n                <div className=\"center\">\n                    <LoadingSpinner />\n                </div>\n            )}\n            {!isLoading && loadedUsers && <UsersList items={loadedUsers} />}\n        </React.Fragment>\n    );\n};\n\nexport default Users;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAElD,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,UAAU,MAAM,+CAA+C;AACtE,OAAOC,cAAc,MAAM,mDAAmD;AAC9E,SAASC,aAAa,QAAQ,8BAA8B;AAE5D,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAChB,MAAM;IAACC,SAAS;IAAEC,KAAK;IAAEC;EAAI,CAAC,GAAGJ,aAAa,EAAE;EAChD,MAAM,CAACK,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,EAAE;EAChDD,SAAS,CAAC,MAAK;IACX,MAAMY,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC5BC,YAAY,CAAC,IAAI,CAAC;MAClB,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiC,CAAC;QAE/D,MAAMC,YAAY,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;QAE1C,IAAI,CAACH,QAAQ,CAACI,EAAE,EAAE;UACd,MAAM,IAAIC,KAAK,CAACH,YAAY,CAACI,OAAO,CAAC;QACzC;QAEAT,cAAc,CAACK,YAAY,CAACK,KAAK,CAAC;QAClCR,YAAY,CAAC,KAAK,CAAC;MACvB,CAAC,CAAC,OAAOS,GAAG,EAAE;QACVC,QAAQ,CAACD,GAAG,CAACF,OAAO,CAAC;MACzB;MACAP,YAAY,CAAC,KAAK,CAAC;IACvB,CAAC;IACDD,WAAW,EAAE;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMY,YAAY,GAAGA,CAAA,KAAM;IACvBD,QAAQ,CAAC,IAAI,CAAC;EAClB,CAAC;EAED,oBACIxB,KAAA,CAAA0B,aAAA,CAAC1B,KAAK,CAAC2B,QAAQ;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACXjC,KAAA,CAAA0B,aAAA,CAACtB,UAAU;IAACK,KAAK,EAAEA,KAAM;IAACyB,OAAO,EAAET,YAAa;IAAAG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,EAAG,EAClDzB,SAAS,iBACNR,KAAA,CAAA0B,aAAA;IAAKS,SAAS,EAAC,QAAQ;IAAAP,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACnBjC,KAAA,CAAA0B,aAAA,CAACrB,cAAc;IAAAuB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,EAAG,CAEzB,EACA,CAACzB,SAAS,IAAIG,WAAW,iBAAIX,KAAA,CAAA0B,aAAA,CAACvB,SAAS;IAACiC,KAAK,EAAEzB,WAAY;IAAAiB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,EAAG,CAClD;AAEzB,CAAC;AAED,eAAe1B,KAAK"},"metadata":{},"sourceType":"module"}