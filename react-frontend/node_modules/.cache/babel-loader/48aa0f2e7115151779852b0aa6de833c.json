{"ast":null,"code":"import React,{Suspense}from'react';import{BrowserRouter as Router,Route,Redirect,Switch}from'react-router-dom';// import Users from './user/pages/Users';\n// import NewPlace from './places/pages/NewPlace';\n// import UserPlaces from './places/pages/UserPlaces';\n// import UpdatePlace from './places/pages/UpdatePlace';\n// import Auth from './user/pages/Auth';\nimport MainNavigation from'./shared/components/Navigation/MainNavigation';import{AuthContext}from'./shared/context/auth-context';import{useAuth}from'./shared/hooks/auth-hook';import LoadingSpinner from'./shared/components/UIElements/LoadingSpinner';var Users=React.lazy(function(){return import('./user/pages/Users');});var NewPlace=React.lazy(function(){return import('./places/pages/NewPlace');});var UserPlaces=React.lazy(function(){return import('./places/pages/UserPlaces');});var UpdatePlace=React.lazy(function(){return import('./places/pages/UpdatePlace');});var Auth=React.lazy(function(){return import('./user/pages/Auth');});var App=function App(){var _useAuth=useAuth(),token=_useAuth.token,login=_useAuth.login,logout=_useAuth.logout,userId=_useAuth.userId;var routes;if(token){routes=/*#__PURE__*/React.createElement(Switch,null,/*#__PURE__*/React.createElement(Route,{path:\"/\",exact:true},/*#__PURE__*/React.createElement(Users,null)),/*#__PURE__*/React.createElement(Route,{path:\"/:userId/places\",exact:true},/*#__PURE__*/React.createElement(UserPlaces,null)),/*#__PURE__*/React.createElement(Route,{path:\"/places/new\",exact:true},/*#__PURE__*/React.createElement(NewPlace,null)),/*#__PURE__*/React.createElement(Route,{path:\"/places/:placeId\"},/*#__PURE__*/React.createElement(UpdatePlace,null)),/*#__PURE__*/React.createElement(Redirect,{to:\"/\"}));}else{routes=/*#__PURE__*/React.createElement(Switch,null,/*#__PURE__*/React.createElement(Route,{path:\"/\",exact:true},/*#__PURE__*/React.createElement(Users,null)),/*#__PURE__*/React.createElement(Route,{path:\"/:userId/places\",exact:true},/*#__PURE__*/React.createElement(UserPlaces,null)),/*#__PURE__*/React.createElement(Route,{path:\"/auth\"},/*#__PURE__*/React.createElement(Auth,null)),/*#__PURE__*/React.createElement(Redirect,{to:\"/auth\"}));}return/*#__PURE__*/React.createElement(AuthContext.Provider,{value:{isLoggedIn:!!token,token:token,userId:userId,login:login,logout:logout}},/*#__PURE__*/React.createElement(Router,null,/*#__PURE__*/React.createElement(MainNavigation,null),/*#__PURE__*/React.createElement(\"main\",null,/*#__PURE__*/React.createElement(Suspense,{fallback:/*#__PURE__*/React.createElement(\"div\",{className:\"center\"},/*#__PURE__*/React.createElement(LoadingSpinner,null))},routes))));};export default App;","map":{"version":3,"names":["React","Suspense","BrowserRouter","Router","Route","Redirect","Switch","MainNavigation","AuthContext","useAuth","LoadingSpinner","Users","lazy","NewPlace","UserPlaces","UpdatePlace","Auth","App","_useAuth","token","login","logout","userId","routes","createElement","path","exact","to","Provider","value","isLoggedIn","fallback","className"],"sources":["/Users/carldiederichs/code/carldiederichs/javascript-projects/mern-udemy/places-mern-project/react-frontend/src/App.js"],"sourcesContent":["import React, { Suspense } from 'react';\nimport { \n  BrowserRouter as Router, \n  Route, \n  Redirect, \n  Switch\n} from 'react-router-dom';\n\n// import Users from './user/pages/Users';\n// import NewPlace from './places/pages/NewPlace';\n// import UserPlaces from './places/pages/UserPlaces';\n// import UpdatePlace from './places/pages/UpdatePlace';\n// import Auth from './user/pages/Auth';\nimport MainNavigation from './shared/components/Navigation/MainNavigation';\nimport { AuthContext } from './shared/context/auth-context';\nimport { useAuth } from './shared/hooks/auth-hook';\nimport LoadingSpinner from './shared/components/UIElements/LoadingSpinner';\n\nconst Users = React.lazy(() => import('./user/pages/Users'));\nconst NewPlace = React.lazy(() => import('./places/pages/NewPlace'));\nconst UserPlaces = React.lazy(() => import('./places/pages/UserPlaces'));\nconst UpdatePlace = React.lazy(() => import('./places/pages/UpdatePlace'));\nconst Auth = React.lazy(() => import('./user/pages/Auth'));\n\nconst App = () => {\n  const {token, login, logout, userId} = useAuth(); \n\n  let routes; \n\n  if (token) {\n    routes = (\n      <Switch>\n        <Route path='/' exact>\n          <Users />\n        </Route>\n        <Route path='/:userId/places' exact>\n          <UserPlaces />\n        </Route>\n        <Route path='/places/new' exact>\n          <NewPlace />\n        </Route>\n        <Route path='/places/:placeId'>\n          <UpdatePlace />\n        </Route>\n        <Redirect to='/'/>\n      </Switch>\n    );\n  } else {\n    routes = (\n      <Switch>\n        <Route path='/' exact>\n          <Users />\n        </Route>\n        <Route path='/:userId/places' exact>\n          <UserPlaces />\n        </Route>\n        <Route path='/auth'>\n          <Auth/> \n        </Route>\n        <Redirect to='/auth'/>\n      </Switch>\n    );\n  }\n\n  return ( \n    <AuthContext.Provider \n      value={{\n        isLoggedIn: !!token, \n        token: token,\n        userId: userId, \n        login: login, \n        logout: logout\n      }}\n    >\n      <Router>\n        <MainNavigation />\n        <main>\n          <Suspense \n            fallback={\n              <div className=\"center\">\n                <LoadingSpinner/>\n              </div>\n            }\n          >\n            {routes}\n          </Suspense>\n        </main>\n      </Router>\n    </AuthContext.Provider>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}