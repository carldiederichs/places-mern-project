{"ast":null,"code":"var _jsxFileName = \"/Users/carldiederichs/code/carldiederichs/javascript-projects/mern-udemy/places-mern-project/react-frontend/src/places/pages/NewPlace.js\";\nimport React, { useCallback, useReducer } from 'react';\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH } from '../../shared/util/validators';\nimport './NewPlace.css';\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case 'INPUT_CHANGE':\n      let formIsValid = true;\n      for (const inputId in state.inputs) {\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n      return {\n        ...state,\n        input: {\n          ...state.inputs,\n          [action.inputId]: {\n            value: action.value,\n            isValid: action.isValid\n          }\n        },\n        isValid: formIsValid\n      };\n    default:\n      return state;\n  }\n};\nconst NewPlace = () => {\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: {\n      title: {\n        value: '',\n        isValid: false\n      },\n      description: {\n        value: '',\n        isValid: false\n      }\n    },\n    isValid: false\n  });\n  const inputHandler = useCallback((id, value, isValid) => {\n    dispatch({\n      type: 'INPUT_CHANGE',\n      value: value,\n      isValid: isValid,\n      inputId: id\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: \"place-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    id: \"title\",\n    element: \"input\",\n    type: \"text\",\n    label: \"Title\",\n    validators: [VALIDATOR_REQUIRE()],\n    errorText: \"Please enter a valid title.\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    id: \"description\",\n    element: \"textarea\",\n    label: \"Description\",\n    validators: [VALIDATOR_MINLENGTH(5)],\n    errorText: \"Please enter a valid description (at least 5 characters).\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    disabled: !formState.isValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, \"ADD PLACE\"));\n};\nexport default NewPlace;","map":{"version":3,"names":["React","useCallback","useReducer","Input","Button","VALIDATOR_REQUIRE","VALIDATOR_MINLENGTH","formReducer","state","action","type","formIsValid","inputId","inputs","isValid","input","value","NewPlace","formState","dispatch","title","description","inputHandler","id","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","element","label","validators","errorText","onInput","disabled"],"sources":["/Users/carldiederichs/code/carldiederichs/javascript-projects/mern-udemy/places-mern-project/react-frontend/src/places/pages/NewPlace.js"],"sourcesContent":["import React, { useCallback, useReducer } from 'react';\n\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport {\n  VALIDATOR_REQUIRE,\n  VALIDATOR_MINLENGTH\n} from '../../shared/util/validators';\nimport './NewPlace.css';\n\nconst formReducer = (state, action) => {\n    switch (action.type) {\n        case 'INPUT_CHANGE':\n            let formIsValid = true; \n            for(const inputId in state.inputs) {\n                if(inputId === action.inputId) {\n                    formIsValid = formIsValid && action.isValid;\n                } else {\n                    formIsValid = formIsValid && state.inputs[inputId].isValid;\n                }\n            }\n            return {\n                ...state, \n                input: {\n                    ...state.inputs,\n                    [action.inputId]: { value: action.value, isValid: action.isValid }\n                }, \n                isValid: formIsValid\n            };\n        default: \n            return state;\n    }\n};\n\nconst NewPlace = () => {\n    const [formState, dispatch] = useReducer(formReducer, {\n        inputs: {\n            title: {\n                value: '',\n                isValid: false\n            }, \n            description: {\n                value: '',\n                isValid: false\n            }\n        }, \n        isValid: false\n    });\n\n    const inputHandler = useCallback((id, value, isValid) => {\n        dispatch({\n            type: 'INPUT_CHANGE', \n            value: value, \n            isValid: isValid, \n            inputId: id\n        });\n    }, []);\n\nreturn (\n    <form className=\"place-form\">\n      <Input\n        id=\"title\"\n        element=\"input\"\n        type=\"text\"\n        label=\"Title\"\n        validators={[VALIDATOR_REQUIRE()]}\n        errorText=\"Please enter a valid title.\"\n        onInput={inputHandler}\n      />\n      <Input\n        id=\"description\"\n        element=\"textarea\"\n        label=\"Description\"\n        validators={[VALIDATOR_MINLENGTH(5)]}\n        errorText=\"Please enter a valid description (at least 5 characters).\"\n        onInput={inputHandler}\n      />\n      <Button type=\"submit\" disabled={!formState.isValid}>\n        ADD PLACE\n      </Button>\n    </form>\n  );\n};\n\nexport default NewPlace;"],"mappings":"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"},"metadata":{},"sourceType":"module"}